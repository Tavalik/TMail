//*****************************************************************
// Библиотека: TRun1C
// Автор: Онянов Виталий (Tavalik.ru)
// Версия от 17.08.2017
//

//*****************************************************************
// ГЛОБАЛЬНЫЕ ПЕРЕМЕННЫЕ

// Структура параметров запуска, описание в процедуре ИнициироватьПараметры()
Перем УчетнаяЗаписьЭП Экспорт;
// Структура отправляемого сообщения, описание в процедуре ИнициироватьПараметры()
Перем СтруктураСообщения Экспорт;
// Переменная для возврата ошибки, если таковая имела место быть
Перем ТекстОшибки Экспорт;


//*****************************************************************
// ЛОКАЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

//*****************************************************************
// Создает структуру учетной записи электронной почты и структуру сообщения
//
//  УчетнаяЗаписьЭП         - Структура - структура учетной записи электронной почты для отправки:
//    * АдресSMTP                           - Строка - Адрес SMTP-сервера
//    * ПортSMTP                            - Строка - Порт SMTP-сервера
//    * ПользовательSMTP                    - Строка - Имя пользвоателя SMTP-сервера
//    * ПарольSMTP                          - Строка - Пароль пользвоателя SMTP-сервера
//    * ИспользоватьSSL                     - Булево - Использовать протокол SSL
//
//  СтруктураСообщения      - Структура - струкутура отправляемого сообщения:
//    * АдресЭлектроннойПочтыПолучателя     - Строка - Адрес электронной почты получателя сообщения. Может содержать несколько адресов, разделеных знаком ";"
//    * АдресЭлектроннойПочтыОтправителя    - Строка - Адрес электронной почты отправителя сообщения
//    * ТемаСообщения                       - Строка - Тема сообщения
//    * ТипТекстаПочтовогоСообщения         - Строка - "HTML" или "Строка"
//    * ТекстСообщения                      - Строка - Текст сообщения
//    * Вложения                            - Строка или СписокЗначений, состоящий из строк - Путь к вложениями сообщения
//
Процедура ИнициироватьПараметры()

	// УЧЕТНАЯ ЗАПИСЬ ЭЛЕКТРОННОЙ ПОЧТЫ ДЛЯ ОТПРАВКИ
	УчетнаяЗаписьЭП = Новый Структура;	
	// Адрес SMTP-сервера
	УчетнаяЗаписьЭП.Вставить("АдресSMTP","");
	// Порт SMTP-сервера
	УчетнаяЗаписьЭП.Вставить("ПортSMTP","");
	// Имя пользователя SMTP-сервера
	УчетнаяЗаписьЭП.Вставить("ПользовательSMTP","");
	// Пароль пользователя SMTP-сервера
	УчетнаяЗаписьЭП.Вставить("ПарольSMTP","");
	// Использование SSL
	УчетнаяЗаписьЭП.Вставить("ИспользоватьSSL",Ложь);
	
	// СТРУКТУРА СООБЩЕНИЯ ДЛЯ ОТПРАВКИ
	СтруктураСообщения = Новый Структура;
	// Адрес электронной почты получателя сообщения. Может содержать несколько адресов, разделеных знаком ";".
	СтруктураСообщения.Вставить("АдресЭлектроннойПочтыПолучателя","");
	// Адрес электронной почты отправителя сообщения.
	СтруктураСообщения.Вставить("АдресЭлектроннойПочтыОтправителя","");
	// Тема сообщения
	СтруктураСообщения.Вставить("ТемаСообщения","Проверка сообщения");
	// "HTML" или "Строка"
	СтруктураСообщения.Вставить("ТипТекстаПочтовогоСообщения","Строка");
	// Текст сообщения
	СтруктураСообщения.Вставить("ТекстСообщения","");
	// Строка или СписокЗначений, состоящий из строк - Путь к вложениями сообщения
	СтруктураСообщения.Вставить("Вложения","");
	
	// ТЕКСТ ОШИБКИ
	ТекстОшибки = "";
	
КонецПроцедуры


//*****************************************************************
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

//*****************************************************************
// Создает начальные теги текста сообщения для HTML-документа
//
// Параметры:
//	Заголовок - Строка - Заголовок страницы. Если не указан, используется тема сообщения.
//	Кодировка - Строка - Кодировка страницы.
//
Процедура НачатьТекстСообщенияHTML(Знач Заголовок="",Кодировка="Windows-1251") Экспорт

	Если Заголовок = "" Тогда
		Заголовок = СтруктураСообщения.ТемаСообщения;
	КонецЕсли;
	
	СтруктураСообщения.ТекстСообщения = 
	"<html>
	|<head>
	|<meta content=""text/html; charset=" + Кодировка + """ http-equiv=""content-type"">
	|<title> " + Заголовок + " </title>
	|</head>
	|<body>";
	
КонецПроцедуры

//*****************************************************************
// Добавляет строку в текст сообщения для HTML-документа, оборачивая строку в тег <p>
//
// Параметры:
//	СтрокаДляДобавления - Строка - Строка для добавления в файл
//	
Процедура ДобавитьВТекстСообщенияHTML(СтрокаДляДобавления="") Экспорт

	СтруктураСообщения.ТекстСообщения = СтруктураСообщения.ТекстСообщения + "
	|<p>" + СтрокаДляДобавления + "</p>";

КонецПроцедуры

//*****************************************************************
// Создает завершающие теги текста сообщения для HTML-документа
// 
Процедура ЗавершитьТекстСообщенияHTML() Экспорт

	СтруктураСообщения.ТекстСообщения = СтруктураСообщения.ТекстСообщения + "
	|</body>
	|</html>";
	
КонецПроцедуры
 
//***************************************************************** 
// Отправить электронное сообщение с помощью CDO.Message
//
// В качестве параметров используются глобальные переменные:
//  СтруктураСообщения      - Структура - струкутура отправляемого сообщения:
//    * АдресЭлектроннойПочтыПолучателя     - Строка - Адрес электронной почты получателя сообщения. 
//			Может содержать несколько адресов, разделеных знаком ";".
//    * АдресЭлектроннойПочтыОтправителя    - Строка - Адрес электронной почты отправителя сообщения.
//    * ТемаСообщения                       - Строка - Тема сообщения.
//    * ТипТекстаПочтовогоСообщения         - Строка - "HTML" или "Строка"
//    * ТекстСообщения                      - Строка - Текст сообщения
//    * Вложения                            - Строка или СписокЗначений, состоящий из строк 
//			- Путь к вложениями сообщения
//  УчетнаяЗаписьЭП         - Структура - структура учетной записи электронной почты для отправки:
//    * АдресSMTP                           - Строка - Адрес SMTP-сервера
//    * ПортSMTP                            - Строка - Порт SMTP-сервера
//    * ПользовательSMTP                    - Строка - Имя пользвоателя SMTP-сервера
//    * ПарольSMTP                          - Строка - Пароль пользвователя SMTP-сервера
//    * ИспользоватьSSL                     - Булево - Использовать протокол SSL
//  ТекстОшибки 			- Строка - В данный параметр записывается текст ошибки, если не удалось отправить сообщение
//
// Возвращаемое значение:
//  Булево                  - Результат отправки сообщения:
//   * Истина                               - Сообщение успешно отправлено.
//   * Ложь                                 - Ошибка отправки собщения
//
Функция ОтправитьСообщение() Экспорт

	// Создание объектов
	Попытка
		loConfig = Новый COMОбъект("CDO.Configuration");
		loCdoMessage = Новый COMОбъект("CDO.Message");
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		Возврат Ложь;
	КонецПопытки;
	
	// Заполним адрес отправителя
	Если Не ЗначениеЗаполнено(СтруктураСообщения.АдресЭлектроннойПочтыОтправителя) Тогда
		СтруктураСообщения.АдресЭлектроннойПочтыОтправителя = УчетнаяЗаписьЭП.ПользовательSMTP;
	КонецЕсли;	
	
	// Адрес получателя
	loCdoMessage.To = СокрЛП(СтруктураСообщения.АдресЭлектроннойПочтыПолучателя);
	// Адрес отправителя
	loCdoMessage.From = СокрЛП(СтруктураСообщения.АдресЭлектроннойПочтыОтправителя);
	// Тема сообщения
	loCdoMessage.Subject = СокрЛП(СтруктураСообщения.ТемаСообщения);
	
	// Текст сообщения в зависимости от формата
	Если СтруктураСообщения.ТипТекстаПочтовогоСообщения = "HTML" Тогда
		loCdoMessage.HTMLBody = СокрЛП(СтруктураСообщения.ТекстСообщения);
	Иначе
		loCdoMessage.Textbody = СокрЛП(СтруктураСообщения.ТекстСообщения);
	КонецЕсли;
	
	// Вложения
	СписокВложений = СтруктураСообщения.Вложения;
	Если ТипЗнч(СписокВложений) = Тип("Строка") И Не СписокВложений = "" Тогда
		Попытка
			loCdoMessage.AddAttachment(СписокВложений);
		Исключение
		КонецПопытки;
	ИначеЕсли ТипЗнч(СписокВложений) = Тип("СписокЗначений") Тогда
		Для Каждого ПутьКВложению Из СписокВложений Цикл
			Попытка
				loCdoMessage.AddAttachment(ПутьКВложению.Значение);
			Исключение
			КонецПопытки;
		КонецЦикла;
	КонецЕсли;
	
	// Параметры сообщения
	loCdoMessage.Configuration = loConfig;
	// Адрес SMTP-Сервера
	loConfig.Fields.Item("http://schemas.microsoft.com/cdo/configuration/smtpserver").Value = УчетнаяЗаписьЭП.АдресSMTP;
	// Порт SMTP-сервера
	loConfig.Fields.Item("http://schemas.microsoft.com/cdo/configuration/smtpserverport").Value = УчетнаяЗаписьЭП.ПортSMTP;
	// Имя пользвоателя SMTP-сервера
	loConfig.Fields.Item("http://schemas.microsoft.com/cdo/configuration/sendusername").Value = УчетнаяЗаписьЭП.ПользовательSMTP;
	// Пароль пользвоателя SMTP-сервера
	loConfig.Fields.Item("http://schemas.microsoft.com/cdo/configuration/sendpassword").Value = УчетнаяЗаписьЭП.ПарольSMTP;
	// Способ передачи сообщения:
	//  1 - Отправить сообщение с помощью локального каталога SMTP-службы
	//  2 - Отправить сообщение через сеть (по протоколу SMTP по сети).
	loConfig.Fields.Item("http://schemas.microsoft.com/cdo/configuration/sendusing").Value = 2;
	// Проверка подлинности:
	//  0 - Без аутентифиации
	//  1 - Использовать базовую (открытым текстом) проверку подлинности.
	//  2 - Использовать проверку подлинности ntlm
	loConfig.Fields.Item("http://schemas.microsoft.com/cdo/configuration/smtpauthenticate").Value = 1;
	// Использование протокола SSL
	//  0 - Не использовать
	//  1 - Использовать
	loConfig.Fields.Item("http://schemas.microsoft.com/cdo/configuration/smtpusessl").Value = ?(УчетнаяЗаписьЭП.ИспользоватьSSL,1,0);
	// Число секунд ожидания для службы SMTP
	loConfig.Fields.Item("http://schemas.microsoft.com/cdo/configuration/smtpconnectiontimeout").Value = 60;
	// Обновляем настройки
	loConfig.Fields.Update();
	
	// Отправка сообщения
	Попытка
		loCdoMessage.Send();
		Возврат Истина;
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		Возврат Ложь;
	КонецПопытки;

КонецФункции


// *****************************************************************
// Сразу при создании инициируем параметры
ИнициироватьПараметры();
  
